/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package main;

import db.Koneksi;
import java.awt.Image;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rhmd_Ari
 */
public class MenuTransaksi extends javax.swing.JPanel {

    /**
     * Creates new form menuDashboard
     */
    private final Connection conn;
            
    public MenuTransaksi() {
        initComponents();
        
        conn = Koneksi.getConnection(); 
        setTabelModel();
        setTabelModelSementara();
        setTabelModelDetail();
        loadData();
        loadDataSementara();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dateChooser1 = new com.raven.datechooser.DateChooser();
        dateChooser2 = new com.raven.datechooser.DateChooser();
        panelMain = new javax.swing.JPanel();
        panelView = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblData = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        pnDetail = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        btnClose = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblDataDetail = new javax.swing.JTable();
        panelAdd = new javax.swing.JPanel();
        lblTambah = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        btnBatal = new javax.swing.JButton();
        lbGambar = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtIdPembeli = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtNama = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtNo = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        btnSetPembeli = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        txtID = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtTanggalBeli = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtTanggalBerangkat = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtLokasi = new javax.swing.JTextField();
        txtWisata = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtIdWisata = new javax.swing.JTextField();
        btnSetWisata = new javax.swing.JButton();
        txtJumlah = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        lbTotal = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDataSementara = new javax.swing.JTable();
        btnUbah = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        txtHarga = new javax.swing.JTextField();
        btnHapus = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        dateChooser1.setDateFormat("yyyy-MM-dd");
        dateChooser1.setTextRefernce(txtTanggalBeli);

        dateChooser2.setDateFormat("yyyy-MM-dd");
        dateChooser2.setTextRefernce(txtTanggalBerangkat);

        setPreferredSize(new java.awt.Dimension(1000, 700));
        setLayout(new java.awt.CardLayout());

        panelMain.setBackground(new java.awt.Color(255, 255, 255));
        panelMain.setPreferredSize(new java.awt.Dimension(1000, 600));
        panelMain.setLayout(new java.awt.CardLayout());

        panelView.setBackground(new java.awt.Color(255, 255, 255));
        panelView.setPreferredSize(new java.awt.Dimension(1000, 600));

        tblData.setAutoCreateRowSorter(true);
        tblData.setBackground(new java.awt.Color(255, 255, 254));
        tblData.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        tblData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblData.setGridColor(new java.awt.Color(204, 204, 204));
        tblData.setRowHeight(40);
        tblData.setShowGrid(true);
        tblData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDataMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblData);

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel1.setText("Data Transaksi");

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel2.setText("TRANSAKSI > Transaksi");

        btnAdd.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(51, 153, 255));
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/plus.png"))); // NOI18N
        btnAdd.setText("TAMBAH");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(51, 153, 255));
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/delete.png"))); // NOI18N
        btnDelete.setText("HAPUS");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        txtSearch.setFont(new java.awt.Font("SansSerif", 2, 12)); // NOI18N
        txtSearch.setForeground(new java.awt.Color(204, 204, 204));
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSearchKeyTyped(evt);
            }
        });

        jButton10.setText("First Page");

        jButton11.setText("<");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton12.setText(">");

        jButton13.setText("Last Page");

        pnDetail.setBackground(new java.awt.Color(255, 255, 254));

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel3.setText("Data Detail transaksi");

        btnClose.setText("X");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        tblDataDetail.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        tblDataDetail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblDataDetail.setGridColor(new java.awt.Color(204, 204, 204));
        tblDataDetail.setShowGrid(true);
        jScrollPane3.setViewportView(tblDataDetail);

        javax.swing.GroupLayout pnDetailLayout = new javax.swing.GroupLayout(pnDetail);
        pnDetail.setLayout(pnDetailLayout);
        pnDetailLayout.setHorizontalGroup(
            pnDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnDetailLayout.createSequentialGroup()
                .addGroup(pnDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnDetailLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnClose))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 962, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        pnDetailLayout.setVerticalGroup(
            pnDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnDetailLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(btnClose))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout panelViewLayout = new javax.swing.GroupLayout(panelView);
        panelView.setLayout(panelViewLayout);
        panelViewLayout.setHorizontalGroup(
            panelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelViewLayout.createSequentialGroup()
                .addGap(325, 325, 325)
                .addComponent(jButton10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton13)
                .addGap(18, 18, 18))
            .addGroup(panelViewLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(panelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelViewLayout.createSequentialGroup()
                        .addGroup(panelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(panelViewLayout.createSequentialGroup()
                                .addComponent(btnAdd)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnDelete)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSearch, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addComponent(pnDetail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelViewLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 962, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(26, 26, 26))
        );
        panelViewLayout.setVerticalGroup(
            panelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelViewLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(panelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelViewLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelViewLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAdd)
                            .addComponent(btnDelete))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton10)
                    .addComponent(jButton11)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton12)
                    .addComponent(jButton13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnDetail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        panelMain.add(panelView, "card2");

        panelAdd.setBackground(new java.awt.Color(255, 255, 255));
        panelAdd.setPreferredSize(new java.awt.Dimension(1000, 600));

        lblTambah.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        lblTambah.setText("Tambah Data Transaksi");

        btnSave.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btnSave.setForeground(new java.awt.Color(51, 153, 255));
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/diskette.png"))); // NOI18N
        btnSave.setText("SIMPAN");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnBatal.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btnBatal.setForeground(new java.awt.Color(51, 153, 255));
        btnBatal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/close.png"))); // NOI18N
        btnBatal.setText("BATAL");
        btnBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBatalActionPerformed(evt);
            }
        });

        lbGambar.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        lbGambar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbGambar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/add-image.png"))); // NOI18N
        lbGambar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        jLabel8.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel8.setText("Pembeli");

        txtIdPembeli.setFont(new java.awt.Font("SansSerif", 2, 12)); // NOI18N
        txtIdPembeli.setText("ID");

        jLabel9.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel9.setText("Nama");

        txtNama.setFont(new java.awt.Font("SansSerif", 2, 12)); // NOI18N
        txtNama.setText("Nama Pembeli");

        jLabel10.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel10.setText("No Telp");

        txtNo.setFont(new java.awt.Font("SansSerif", 2, 12)); // NOI18N
        txtNo.setText("No. Telpon");

        jLabel11.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel11.setText("Email");

        txtEmail.setFont(new java.awt.Font("SansSerif", 2, 12)); // NOI18N
        txtEmail.setText("@gmail.com");

        btnSetPembeli.setText("...");
        btnSetPembeli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSetPembeliActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 153, 255));

        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("No Transaksi");

        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Tanggal Pembelian");

        jLabel7.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Tanggal Keberangkatan");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtTanggalBeli, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtTanggalBerangkat, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtTanggalBeli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtTanggalBerangkat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jLabel12.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel12.setText("Lokasi Wisata");

        txtLokasi.setFont(new java.awt.Font("SansSerif", 2, 12)); // NOI18N
        txtLokasi.setText("Lokasi");

        txtWisata.setFont(new java.awt.Font("SansSerif", 2, 12)); // NOI18N
        txtWisata.setText("Nama ");

        jLabel14.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel14.setText("Nama Wisata");

        jLabel15.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel15.setText("Wisata");

        txtIdWisata.setFont(new java.awt.Font("SansSerif", 2, 12)); // NOI18N
        txtIdWisata.setText("ID");

        btnSetWisata.setText("...");
        btnSetWisata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSetWisataActionPerformed(evt);
            }
        });

        txtJumlah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtJumlahActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel16.setText("Jumlah");

        jLabel17.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel17.setText("Total Pinjam");

        lbTotal.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        lbTotal.setText("Total");

        tblDataSementara.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        tblDataSementara.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblDataSementara.setGridColor(new java.awt.Color(204, 204, 204));
        tblDataSementara.setRowHeight(40);
        tblDataSementara.setShowGrid(true);
        tblDataSementara.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDataSementaraMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblDataSementara);

        btnUbah.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btnUbah.setForeground(new java.awt.Color(51, 153, 255));
        btnUbah.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/plus.png"))); // NOI18N
        btnUbah.setText("UBAH");
        btnUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel18.setText("Harga Wisata");

        txtHarga.setFont(new java.awt.Font("SansSerif", 2, 12)); // NOI18N
        txtHarga.setText("Rp. ");

        btnHapus.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btnHapus.setForeground(new java.awt.Color(51, 153, 255));
        btnHapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/delete.png"))); // NOI18N
        btnHapus.setText("HAPUS");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        btnCancel.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btnCancel.setForeground(new java.awt.Color(51, 153, 255));
        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/close.png"))); // NOI18N
        btnCancel.setText("BATAL");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelAddLayout = new javax.swing.GroupLayout(panelAdd);
        panelAdd.setLayout(panelAddLayout);
        panelAddLayout.setHorizontalGroup(
            panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAddLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelAddLayout.createSequentialGroup()
                        .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelAddLayout.createSequentialGroup()
                                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(panelAddLayout.createSequentialGroup()
                                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtEmail))
                                    .addGroup(panelAddLayout.createSequentialGroup()
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtIdPembeli, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnSetPembeli))
                                    .addGroup(panelAddLayout.createSequentialGroup()
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtNama))
                                    .addGroup(panelAddLayout.createSequentialGroup()
                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtNo)))
                                .addGap(96, 96, 96)
                                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel18))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtLokasi, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtWisata, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelAddLayout.createSequentialGroup()
                                        .addComponent(txtIdWisata, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnSetWisata))
                                    .addComponent(txtHarga))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lbGambar)
                                .addGap(26, 26, 26)
                                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtJumlah, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(panelAddLayout.createSequentialGroup()
                                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelAddLayout.createSequentialGroup()
                                        .addComponent(btnUbah)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnHapus)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnCancel))
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 966, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblTambah)
                                    .addGroup(panelAddLayout.createSequentialGroup()
                                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnBatal, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 1, Short.MAX_VALUE)))
                        .addGap(0, 33, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelAddLayout.setVerticalGroup(
            panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAddLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(lblTambah)
                .addGap(18, 18, 18)
                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBatal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelAddLayout.createSequentialGroup()
                        .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSetPembeli)
                            .addComponent(txtIdPembeli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txtNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lbGambar, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelAddLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtJumlah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbTotal))
                    .addGroup(panelAddLayout.createSequentialGroup()
                        .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSetWisata)
                            .addComponent(txtIdWisata, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addGap(18, 18, 18)
                        .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtWisata, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addGap(18, 18, 18)
                        .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(txtLokasi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel18)
                            .addComponent(txtHarga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUbah)
                    .addComponent(btnHapus)
                    .addComponent(btnCancel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(150, Short.MAX_VALUE))
        );

        panelMain.add(panelAdd, "card2");

        add(panelMain, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        panelMain.removeAll();
        panelMain.add(panelAdd);
        panelMain.repaint();
        panelMain.revalidate();
 
        try {
            txtID.setText(setIDTransaksi());
        } catch (SQLException ex) {
            Logger.getLogger(MenuTransaksi.class.getName()).log(Level.SEVERE, null, ex);
        }
        btnUbah.setText("TAMBAH");
        
    }//GEN-LAST:event_btnAddActionPerformed

    private void tblDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDataMouseClicked
        pnDetail.setVisible(true);
        
        int row = tblData.getSelectedRow();
        String id = tblData.getValueAt(row, 0).toString();
        getDataDetail((DefaultTableModel) tblDataDetail.getModel(), id);
    }//GEN-LAST:event_tblDataMouseClicked

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        deleteData();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void txtSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyTyped
        searchData();
    }//GEN-LAST:event_txtSearchKeyTyped

    private void btnBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBatalActionPerformed
        // TODO add your handling code here:
        showPanel();
        loadData();
    }//GEN-LAST:event_btnBatalActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if (btnSave.getText().equals("TAMBAH"))
        {
            btnSave.setText("SIMPAN");
        }
        else if (btnSave.getText().equals("SIMPAN"))
        {
            insertData();
            deleteDataSementara();
            resetForm();
            loadData();
            showPanel();
        }
        else if (btnSave.getText().equals("PERBARUI"))
        {
            updateData();
            resetForm();
            loadData();
            showPanel();
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnSetPembeliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSetPembeliActionPerformed
        setPembeli();
    }//GEN-LAST:event_btnSetPembeliActionPerformed

    private void btnSetWisataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSetWisataActionPerformed
        setWisata();
    }//GEN-LAST:event_btnSetWisataActionPerformed

    private void txtJumlahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtJumlahActionPerformed
        if (btnUbah.getText().equals("TAMBAH")){
            insertDataSementara();
        }else if(btnUbah.getText().equals("UBAH")){
            updateData();
        }
    }//GEN-LAST:event_txtJumlahActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        deleteData();
    }//GEN-LAST:event_btnHapusActionPerformed

    private void tblDataSementaraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDataSementaraMouseClicked
        btnUbah.setText("UBAH");
        btnHapus.setVisible(true);
        btnCancel.setVisible(true);
        dataTabelSementara();
    }//GEN-LAST:event_tblDataSementaraMouseClicked

    private void btnUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahActionPerformed
        if(btnUbah.getText().equals("TAMBAH")){
            insertDataSementara();
        }else if(btnUbah.getText().equals("TAMBAH")){
            updateData();
        }
    }//GEN-LAST:event_btnUbahActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        loadDataSementara();
        resetFormWisata();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        showPanel();
        loadData();
    }//GEN-LAST:event_btnCloseActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBatal;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSetPembeli;
    private javax.swing.JButton btnSetWisata;
    private javax.swing.JButton btnUbah;
    private com.raven.datechooser.DateChooser dateChooser1;
    private com.raven.datechooser.DateChooser dateChooser2;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lbGambar;
    private javax.swing.JLabel lbTotal;
    private javax.swing.JLabel lblTambah;
    private javax.swing.JPanel panelAdd;
    private javax.swing.JPanel panelMain;
    private javax.swing.JPanel panelView;
    private javax.swing.JPanel pnDetail;
    private javax.swing.JTable tblData;
    private javax.swing.JTable tblDataDetail;
    private javax.swing.JTable tblDataSementara;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtHarga;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtIdPembeli;
    private javax.swing.JTextField txtIdWisata;
    private javax.swing.JTextField txtJumlah;
    private javax.swing.JTextField txtLokasi;
    private javax.swing.JTextField txtNama;
    private javax.swing.JTextField txtNo;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtTanggalBeli;
    private javax.swing.JTextField txtTanggalBerangkat;
    private javax.swing.JTextField txtWisata;
    // End of variables declaration//GEN-END:variables

    private void loadData() {
        getData((DefaultTableModel) tblData.getModel());
        btnDelete.setVisible(false);
        btnCancel.setVisible(false);
        pnDetail.setVisible(false);
    }
    
    private void loadDataSementara(){
        getDataSementara((DefaultTableModel) tblDataSementara.getModel());
        btnCancel.setVisible(false);
        btnHapus.setVisible(false);
    }
    
    private void showPanel(){
        panelMain.removeAll();
        panelMain.add(new MenuTransaksi());
        panelMain.repaint();
        panelMain.revalidate();
    }
    
    private void resetForm() {
        txtID.setText("");
        txtNama.setText("");
        txtHarga.setText("");
        txtLokasi.setText("");
    }

    private void resetFormWisata(){
        btnUbah.setText("TAMBAH");
        txtIdWisata.setText("");
        txtWisata.setText("");
        txtLokasi.setText("");
        txtHarga.setText("");
        txtJumlah.setText("");
        lbGambar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/add-image.png")));
    }
    
    private void setTabelModel() {
        DefaultTableModel model = (DefaultTableModel) tblData.getModel();
        model.addColumn("ID Transaksi");
        model.addColumn("Tanggal Beli");
        model.addColumn("Tanggal Berangkat");
        model.addColumn("Total Pembelian");
        model.addColumn("Pembeli");
    }

    private void getData(DefaultTableModel model) {
        model.setRowCount(0);
        
        try {
            String sql = "SELECT tr.id_transaksi, tr.tanggal_beli, tr.tanggal_berangkat, tr.total, pb.nama_pembeli\n" +
                            "FROM transaksi tr\n" +
                            "INNER JOIN pembeli pb ON pb.id_pembeli = tr.id_pembeli ORDER BY tr.id_transaksi ASC";
            try (PreparedStatement st = conn.prepareStatement(sql)){
                ResultSet rs = st.executeQuery();
                
                while (rs.next()){
                    String IdTransaksi          = rs.getString("id_transaksi");
                    String TanggalBeli          = rs.getString("tanggal_beli");
                    String TanggalBerangkat     = rs.getString("tanggal_berangkat");
                    String Total                = rs.getString("total");
                    String NamaPembeli          = rs.getString("nama_pembeli");
                
                    Object [] rowData = {IdTransaksi, TanggalBeli, TanggalBerangkat, Total, NamaPembeli};
                    model.addRow(rowData);
                }
            }
        } catch (SQLException e) {
           Logger.getLogger(MenuTransaksi.class.getName()).log(Level.SEVERE, null, e);
        }
    }   
    
    private void setTabelModelDetail() {
        DefaultTableModel model = (DefaultTableModel) tblDataDetail.getModel();
        model.addColumn("ID");
        model.addColumn("Id Wisata");
        model.addColumn("Wisata");
        model.addColumn("Jumlah");
        model.addColumn("Status Pembayaran");
    }
    
    private void getDataDetail(DefaultTableModel model, String id) {
            model.setRowCount(0);
        
        try {
            String sql = "SELECT dtr.id_transaksi, ws.id_wisata, ws.nama_wisata, dtr.jumlah, dtr.status FROM detail_transaksi dtr INNER JOIN wisata ws ON ws.id_wisata = dtr.id_wisata "
                    + "WHERE dtr.id_transaksi = '"+id+"'"
                    + "ORDER BY dtr.id_transaksi ASC";
            try (PreparedStatement st = conn.prepareStatement(sql)){
                ResultSet rs = st.executeQuery();
                
                while (rs.next()){
                    String idTransaksi      = rs.getString("id_transaksi");
                    String idWisata         = rs.getString("id_wisata");
                    String nama             = rs.getString("nama_wisata");
                    String jumlah           = rs.getString("jumlah");
                    String status           = rs.getString("status");
                
                    Object[] rowData = {idTransaksi, idWisata, nama, jumlah, status};
                    model.addRow(rowData);
                }
            }
        } catch (SQLException e) {
           Logger.getLogger(MenuTransaksi.class.getName()).log(Level.SEVERE, null, e);
        }
    }   
        
    private void setTabelModelSementara() {
        DefaultTableModel model = (DefaultTableModel) tblDataSementara.getModel();
        model.addColumn("ID");
        model.addColumn("Nama Wisata");
        model.addColumn("Lokasi");
        model.addColumn("Harga Satuan");
        model.addColumn("Jumlah Pemesanan");
    }
    
    private void getDataSementara(DefaultTableModel model) {
        model.setRowCount(0);
        
        try {
            String sql = "SELECT * FROM sementara";
            try (PreparedStatement st = conn.prepareStatement(sql)){
                ResultSet rs = st.executeQuery();
                
                while (rs.next()){
                    String IdWisata     = rs.getString("id_wisata");
                    String NamaWisata   = rs.getString("nama_wisata");
                    String Lokasi       = rs.getString("lokasi");
                    String Harga        = rs.getString("harga");
                    String Jumlah       = rs.getString("jumlah");
                
                    Object [] rowData = {IdWisata, NamaWisata, Lokasi, Harga, Jumlah};
                    model.addRow(rowData);
                }
            }
        } catch (SQLException e) {
           Logger.getLogger(MenuTransaksi.class.getName()).log(Level.SEVERE, null, e);
        }
    }   

    private String setIDTransaksi() throws SQLException {
        String urutan = null;
        Date now = new Date();
        SimpleDateFormat noFormat = new SimpleDateFormat("yyMM");
        String no = noFormat.format(now);

        String sql = "SELECT RIGHT(id_transaksi, 4) AS Nomor " +
                     "FROM transaksi " +
                     "WHERE id_transaksi LIKE 'TR" + no + "%' " +
                     "ORDER BY id_transaksi DESC " + 
                     "LIMIT 1";

        try (PreparedStatement st = conn.prepareStatement(sql);
             ResultSet rs = st.executeQuery()) {

            if (rs.next()) {
                String nomorStr = rs.getString("Nomor");
                int nomor = nomorStr != null ? Integer.parseInt(nomorStr) + 1 : 1;
                urutan = "TR" + no + String.format("%03d", nomor);
            } else {
                urutan = "TR" + no + "0001";
            }
        } catch (SQLException e) {
            java.util.logging.Logger.getLogger(MenuTransaksi.class.getName()).log(Level.SEVERE, null, e);
        }
        return urutan;
    }
    
    private void setPembeli(){
        boolean closable = true;
        DataPembeli pembeli = new DataPembeli(null, closable);
        pembeli.setVisible(true);
        
        txtIdPembeli.setText(pembeli.getIdPembeli());
        txtNama.setText(pembeli.getNamaPembeli());
        txtNo.setText(pembeli.getNoPembeli());
        txtEmail.setText(pembeli.getEmailPembeli());
        
        txtIdPembeli.setEnabled(false);
        txtNama.setEnabled(false);
        txtNo.setEnabled(false);
        txtEmail.setEnabled(false);
    }

    private void setWisata(){
        boolean closable = true;
        DataWisata wisata = new DataWisata(null, closable);
        wisata.setVisible(true);
        
        String id = wisata.getIdWisata();
        txtIdWisata.setText(wisata.getIdWisata());
        txtWisata.setText(wisata.getNamaWisata());
        txtLokasi.setText(wisata.getLokasi());
        txtHarga.setText(wisata.getHarga());
        
        txtIdWisata.setEnabled(false);
        txtWisata.setEnabled(false);
        txtLokasi.setEnabled(false);
        txtHarga.setEnabled(false);
        setImage(lbGambar, id);
    }
    
    private void insertDataSementara() {
            // Mendapatkan nilai dari elemen antarmuka pengguna
            String IdWisata = txtIdWisata.getText();
            String Wisata = txtWisata.getText();
            String Lokasi = txtLokasi.getText();
            String Harga = txtHarga.getText();
            String Jumlah = txtJumlah.getText();
            String Status = "Sudah di Bayar (Lunas)";

            // Memeriksa apakah semua kolom diisi
            if (IdWisata.isEmpty() || Wisata.isEmpty() || Lokasi.isEmpty() || Harga.isEmpty() || Jumlah.isEmpty() || Status.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Semua Kolom Harus diisi !", "Validasi", JOptionPane.ERROR_MESSAGE);
                return;
            }

            try {
                // Menyiapkan dan menjalankan kueri SQL untuk menyisipkan data ke dalam tabel Sementara
                String sql = "INSERT INTO sementara (id_wisata, nama_wisata, lokasi, Harga, jumlah, status) VALUE (?,?,?,?,?,?)";
                try (PreparedStatement st = conn.prepareStatement(sql)) {
                    st.setString(1, IdWisata);
                    st.setString(2, Wisata);
                    st.setString(3, Lokasi);
                    st.setString(4, Harga);
                    st.setString(5, Jumlah);
                    st.setString(6, Status);


                    // Menjalankan kueri dan memeriksa apakah data berhasil disisipkan
                    st.executeUpdate();

                    int totalTransaksi = getTotalTransaksi();
                    lbTotal.setText(String.valueOf(totalTransaksi));
                    loadDataSementara();

                    if(JOptionPane.showConfirmDialog(this, "Mau Tambah Wisata", "Konfirmasi", JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION){
                        resetFormWisata();
                        btnSetWisata.requestFocus();
                    }else{
                        resetFormWisata();
                        btnSave.requestFocus();
                    }
                   } 
            } catch (SQLException e) {
                // Mencatat kesalahan SQL ke dalam log
                Logger.getLogger(MenuTransaksi.class.getName()).log(Level.SEVERE, null, e);
            }
        }

    
    private int getTotalTransaksi() {
        int totalTransaksi = 0;

        try {
            String sql = "SELECT SUM(jumlah) AS total FROM sementara";
            try (PreparedStatement st = conn.prepareStatement(sql)) {
                try (ResultSet rs = st.executeQuery()) {
                    if (rs.next()) {
                        totalTransaksi = rs.getInt("total");
                    }
                }
            }
        } catch (SQLException e) {
            Logger.getLogger(MenuTransaksi.class.getName()).log(Level.SEVERE, "Terjadi kesalahan saat mengambil total transaksi", e);
        }

        return totalTransaksi;
        }
    
    private void insertData() {
        // Mendapatkan nilai dari elemen antarmuka pengguna
        String IdTransaksi  = txtID.getText();
        String TglBeli      = txtTanggalBeli.getText();
        String TglBerangkat = txtTanggalBerangkat.getText();
        String Total        = lbTotal.getText();
        String IdPembeli    = txtIdPembeli.getText();
        
        // Memeriksa apakah semua kolom diisi
        if (IdTransaksi.isEmpty()  || TglBeli.isEmpty() || TglBerangkat.isEmpty() || Total.isEmpty() || IdPembeli.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Semua Kolom Harus diisi !", "Validasi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            // Menyiapkan dan menjalankan kueri SQL untuk menyisipkan data ke dalam tabel wisata
            String sql = "INSERT INTO transaksi (id_transaksi, tanggal_beli, tanggal_berangkat, total, id_pembeli) VALUE (?,?,?,?,?)";
            try (PreparedStatement st = conn.prepareStatement(sql)) {
                st.setString(1, IdTransaksi);
                st.setString(2, TglBeli);
                st.setString(3, TglBerangkat);
                st.setString(4, Total);
                st.setString(5, IdPembeli);

                // Menjalankan kueri dan memeriksa apakah data berhasil disisipkan
                int rowInserted = st.executeUpdate();
                if (rowInserted > 0) { 
                    insertDataDetail();
                    
                    // Menampilkan pesan sukses, mereset formulir, memuat ulang data, dan menampilkan panel
                    JOptionPane.showMessageDialog(this, "Data Berhasil Ditambah");
                    resetForm();
                    loadData();
                    showPanel();
                }
            } 
        } catch (SQLException e) {
            // Mencatat kesalahan SQL ke dalam log
            java.util.logging.Logger.getLogger(MenuTransaksi.class.getName()).log(Level.SEVERE, null, e);
        }
    }
    
    private void insertDataDetail() {
        String IdTransaksi = txtID.getText();
        String IdWisata      = txtIdWisata.getText();
        String jumlah = txtJumlah.getText();
        String status        = "Sudah Bayar";

        try {
            // Menyiapkan dan menjalankan kueri SQL untuk menyisipkan data ke dalam tabel
            String sql = "INSERT INTO detail_transaksi (id_transaksi, id_wisata, jumlah, status) VALUE (?,?,?,?)";
            try (PreparedStatement st = conn.prepareStatement(sql)) {
                // Mengatur parameter untuk menghindari SQL Injection
                st.setString(1, IdTransaksi);
                st.setString(2, IdWisata);
                st.setString(3, jumlah);
                st.setString(4, status);
                st.executeUpdate();
            }
        } catch (SQLException e) {
            // Mencatat kesalahan SQL ke dalam log
            Logger.getLogger(MenuTransaksi.class.getName()).log(Level.SEVERE, null, e);
        }
    }


    //Metode ini digunakan untuk mengatur tampilan panel, memperbarui data wisata yang dipilih
    private void dataTabelSementara() {
        int row = tblDataSementara.getSelectedRow();
        if(row!=-1){
            txtIdWisata.setEnabled(false);
            txtWisata.setEnabled(false);
            txtLokasi.setEnabled(false);
            txtHarga.setEnabled(false);

            // Menampilkan informasi wisata yang dipilih pada elemen UI
            String id = tblDataSementara.getValueAt(row, 0).toString();
            txtIdWisata.setText(tblDataSementara.getValueAt(row, 0).toString());
            txtWisata.setText(tblDataSementara.getValueAt(row, 1).toString());
            txtLokasi.setText(tblDataSementara.getValueAt(row, 2).toString());
            txtHarga.setText(tblDataSementara.getValueAt(row, 3).toString());
            txtJumlah.setText(tblDataSementara.getValueAt(row, 4).toString());

            setImage(lbGambar, id);
            txtJumlah.requestFocus();
        }
    }

    private void setImage(JLabel lb_gambar,String id){
        try {
            String sql = "SELECT * FROM wisata WHERE id_wisata = '"+ id +"'";
            PreparedStatement st = conn.prepareStatement(sql);
            ResultSet rs = st.executeQuery();
            
            if(rs.next()){
                byte[] img = rs.getBytes("Gambar");
                if(img != null){
                    ImageIcon imageIcon = new ImageIcon(new ImageIcon(img).getImage().getScaledInstance(lb_gambar.getWidth(), lb_gambar.getHeight(), Image.SCALE_SMOOTH));
                    lb_gambar.setIcon(imageIcon);
                }else{
                    ImageIcon defaultIcon = new ImageIcon(getClass().getResource("icon/add-image.png"));
                    lb_gambar.setIcon(defaultIcon);
                }
            }
        } catch (SQLException e) {
            java.util.logging.Logger.getLogger(MenuTransaksi.class.getName()).log(Level.SEVERE, null, e);
        }
    }

    //Metode untuk mengupdate Data di tablle
    private void updateData() {
        // Mengambil nilai dari elemen antarmuka pengguna (UI)
        String IdWisata = txtIdWisata.getText();
        String JumlahPinjam = txtJumlah.getText();
        
        // Memeriksa apakah semua kolom diisi
        if (IdWisata.isEmpty() || JumlahPinjam.isEmpty() ) {
            JOptionPane.showMessageDialog(this, "Semua Kolom Harus dipilih dan diisi !", "Validasi", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try{
            // Membuat perintah SQL untuk melakukan update data wisata berdasarkan ID
            String sql = "UPDATE sementara SET jumlah=? WHERE id_wisata=?";
                    
            try(PreparedStatement st = conn.prepareStatement(sql)){
                // Mengatur nilai parameter pada perintah SQL
                st.setString(1, JumlahPinjam);
                st.setString(2, IdWisata);
                
                // Mengeksekusi perintah SQL untuk melakukan update
                int rowUpdated = st.executeUpdate();
                // Menampilkan pesan jika update berhasil dan melakukan reset, memuat data baru, serta menampilkan panel
                if(rowUpdated > 0){
                    JOptionPane.showMessageDialog(this, "Data Berhasil Diperbarui");
                    resetFormWisata();
                    loadDataSementara();
                }
            }
        } catch (SQLException e) {
            // Menangani exception SQL dengan mencatatnya dalam log
            Logger.getLogger(MenuTransaksi.class.getName()).log(Level.SEVERE, null, e);
        }
    }

        //Metode Digunakan untuk menghapus data
    private void deleteData() {
        int selectedRow = tblDataSementara.getSelectedRow();
        int confirm = JOptionPane.showConfirmDialog(this, "Apakah Yakin Ingin Menghapus Data Ini?",
                "Konfirmasi Untuk Hapus",
                JOptionPane.YES_NO_OPTION);

        // Jika pengguna mengonfirmasi untuk menghapus
        if(confirm == JOptionPane.YES_OPTION){
            String id = tblDataSementara.getValueAt(selectedRow, 0).toString();
            try{
                // Query SQL untuk menghapus data dari tabel "wisata" berdasarkan id_transaksi
                String sql = "DELETE FROM sementara WHERE id_wisata=?";
                try(PreparedStatement st = conn.prepareStatement(sql)){
                    st.setString(1, id);

                    // Menjalankan query untuk menghapus data
                    int rowDeleted = st.executeUpdate();
                    if (rowDeleted > 0){
                        // Menampilkan pesan sukses jika data berhasil dihapus
                        JOptionPane.showMessageDialog(this, "Data Berhasil Dihapus");
                    }else{
                        // Menampilkan pesan gagal jika data tidak berhasil dihapus
                        JOptionPane.showMessageDialog(this, "Data Gagal Dihapus");
                }
            }
        }catch (SQLException e) {
            // Menangani exception SQLException dan mencatat log
            Logger.getLogger(MenuTransaksi.class.getName()).log(Level.SEVERE, null,e);
        }
        }

        // Mereset formulir setelah menghapus data
        resetFormWisata();
        loadDataSementara();
    }
        
        private void deleteDataSementara(){
            try {
                String sql = "DELETE FROM sementara";
                try(PreparedStatement st = conn.prepareStatement(sql)){
                    st.executeUpdate();
                }  
            } catch (SQLException e) {
                Logger.getLogger(MenuTransaksi.class.getName()).log(Level.SEVERE, null,e);
            }
        }

    private void searchData() {
        // Mengambil kata kunci pencarian dari komponen teks
        String kataKunci = txtSearch.getText();

        // Mendapatkan model tabel default
        DefaultTableModel model = (DefaultTableModel) tblData.getModel();
        // Mengatur jumlah baris model tabel menjadi 0 untuk menghapus data sebelumnya
        model.setRowCount(0);

        try {
            // Query SQL untuk mencari data wisata berdasarkan ID atau nama wisata
            String sql = "SELECT tr.id_transaksi, tr.tanggal_beli, tr.tanggal_berangkat, tr.total, pb.nama_pembeli\n" +
                         "FROM transaksi tr\n" +
                         "INNER JOIN pembeli pb ON pb.id_pembeli = tr.id_pembeli " +
                         "WHERE tr.id_transaksi LIKE ? OR pb.nama_pembeli LIKE ?";

            try (PreparedStatement st = conn.prepareStatement(sql)) {
                // Mengatur parameter pada statement SQL untuk kata kunci pencarian
                st.setString(1, "%" + kataKunci + "%");
                st.setString(2, "%" + kataKunci + "%");

                // Mengeksekusi query SQL dan mendapatkan hasil
                ResultSet rs = st.executeQuery();

                // Memproses hasil query dan menambahkannya ke dalam model tabel
                while (rs.next()) {
                    String IdTransaksi = rs.getString("id_transaksi");
                    String TanggalBeli = rs.getString("tanggal_beli");
                    String TanggalBerangkat = rs.getString("tanggal_berangkat");
                    String Total = rs.getString("total");
                    String NamaPembeli = rs.getString("nama_pembeli");

                    Object[] rowData = {IdTransaksi, TanggalBeli, TanggalBerangkat, Total, NamaPembeli};
                    model.addRow(rowData);
                }
            }
        } catch (SQLException e) {
            // Menangani kesalahan SQL dengan mencatatnya ke log
            Logger.getLogger(MenuTransaksi.class.getName()).log(Level.SEVERE, null, e);
        }
    }

}
